Shell scripts to stress Linux Kernel Live Patching infrastructure. These
scripts try to induce a few stressful situations for the live patching
infrastructure in the hope of making bugs creep out of their hideouts.

Brief test case description
---------------------------

TC3 Patch under pressure
    * Patch a heavily hammered function in kernel.

TC5 Test kernel live patching in quick succession
    * Apply one patch after another in quick succession.

TC6 Patch while CPUs are busy
    * Make CPUs busy in user space and patch.

TC7 Test kernel live patching in low-memory condition
    * Run a workload that will bring the system close to OOM and then start
      patching.
    * Requires hiworkload from a closed SUSE repository. TODO - replace 
      hiworkload with an opensource alternative.

TC8 Patch with replace-all
    * Make sure "replace-all" KLP function works as expected.

TC10 Patch caller of graph traced callee
    * Check that the reliable stacktrace implementation is able to
      discover callers of graph traced functions.

TC11 Patch function sleeping in a fault
    * Make sure that a patch to function sleeping in a fault exception
      gets blocked.

TC12 Patch caller of kretprobed callee
    * Check that the reliable stacktrace implementation is able to
      discover callers of functions with a kretprobe on them.
